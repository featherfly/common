allprojects {
    apply plugin: 'java'
    apply from: rootDir.getAbsolutePath() + '/java_base.gradle'   
    apply from: rootDir.getAbsolutePath() + '/maven_push.gradle'
        
    ext {
	}

    dependencies {
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
		
	    testCompile (
	    	'org.testng:testng:7.1.0',
	    	'org.slf4j:slf4j-log4j12:1.7.30'
	    )
        testCompile group: 'com.google.inject', name: 'guice', version: '4.2.3'
	}
}
	
dependencies {
	compile project(':common-core')
	//compile 'cn.featherfly:featherfly-common:1.7.4'
	compile 'cn.featherfly:featherfly-common-bean-javassist:1.4.0'
	compile 'commons-beanutils:commons-beanutils:latest.integration'
	compile 'javassist:javassist:3.12.1.GA'
	compile 'com.alibaba:fastjson:1.1.41'
	compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'log4j:log4j:1.2.16'
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.11.RELEASE'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.9'
    
}
/*
test {
    useTestNG()
    testLogging.showStandardStreams = true
    minHeapSize = "128m"
    maxHeapSize = "512m"
    jvmArgs '-XX:MaxPermSize=256m'
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}
*/